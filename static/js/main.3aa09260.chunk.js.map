{"version":3,"sources":["images sync /^/.//project.*/.png$","images/project0.png","images/project1.png","images/project2.png","images/icons/001-linkedin.png","images/icons/002-cat.png","images/icons/003-cv.png","components/Card.tsx","components/Projects.tsx","components/BigWord.tsx","components/Bio.tsx","components/Contact.tsx","pages/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Card","props","string","projectNumber","className","href","url","target","rel","name","noDash","split","join","toUpperCase","slice","repoNameFormat","src","require","alt","description","Projects","projectItems","projects","filter","project","i","html_url","key","BigWord","word","Bio","Contact","Main","useState","data","setData","useEffect","a","fetch","list","json","repos","fetchRepos","App","preserveAspectRatio","height","width","viewBox","xmlns","version","fill","stroke","strokeWidth","d","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3aa09260.chunk.js","sourcesContent":["var map = {\n\t\"./project0.png\": 14,\n\t\"./project1.png\": 15,\n\t\"./project2.png\": 16\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","module.exports = __webpack_public_path__ + \"static/media/project0.c237abf8.png\";","module.exports = __webpack_public_path__ + \"static/media/project1.8c631fce.png\";","module.exports = __webpack_public_path__ + \"static/media/project2.61e273f2.png\";","module.exports = __webpack_public_path__ + \"static/media/001-linkedin.d31a5371.png\";","module.exports = __webpack_public_path__ + \"static/media/002-cat.49ae26fb.png\";","module.exports = __webpack_public_path__ + \"static/media/003-cv.d5853438.png\";","import * as React from \"react\";\n\nexport default function Card(props: { name: string; key: number; description: string; projectNumber: number; url: string }) {\n    function repoNameFormat(name: string) {\n        let noDash = name.split(\"-\").join(\" \")\n        let caseCorrect = ((noDash.split(''))[0].toUpperCase()) + noDash.slice(1)\n        return caseCorrect;\n    }\n\n    let string = \"project\" + props.projectNumber\n    return (\n        <div className={\"card project\" + string}>\n            <div>\n            </div>\n            <div className={\"card-header \" + string + \"-header\"}>\n                <a className=\"card-link\" href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">{repoNameFormat(props.name)}</a>\n            </div>\n            <img className=\"card-img\" src={require('../images/project' + props.projectNumber + \".png\")} alt=\"project\" />\n            <div className={\"card-text \" + string + \"-text\"}>\n                {props.description}\n            </div>\n        </div>\n\n    )\n}","import * as React from \"react\";\nimport Card from \"./Card\"\n\nexport default function Projects(props: { projects: any[] }) {\n\n    let projectItems = props.projects.filter((project: any, i: number) =>\n        (project.name === \"Cocktail-Genius\" || project.name === \"fermention\" || project.name === \"ebookpromos\")\n    ).map((project: any, i: number) => {\n        return (\n            <Card name={project.name}\n                url={project.html_url}\n                description={project.description}\n                projectNumber={i}\n                key={i} />\n        )\n    });\n\n    return (\n        <div>\n            <div className=\"middle-spacer\"></div>\n            <div>\n                <div className=\"projectsContainer content\">\n                    {projectItems}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import * as React from \"react\";\n\nexport default function BigWord(props: { word: string }) {\n    return (\n        <div className=\"title\">\n            <div className=\"content\">\n                {props.word}\n            </div>\n        </div>\n    )\n}","import * as React from \"react\";\nimport BigWord from \"../components/BigWord\"\n\nexport default function Bio() {\n    return (\n        <div className=\"bio theme accent\">\n            <div className=\"top-spacer\"></div>\n            <BigWord word=\"Hey, I'm Barry.\" />\n            <div className=\"content\">\n                <p className=\"bio-text\">\n                    I’m a Full Stack Web Developer based in Atlanta, GA.\n                </p>\n                <p className=\"bio-text\">\n                    Unique problems that require interesting technology\n                    make me get out of bed in the morning. I specialize in\n                    building with React and Node, but I’m constantly expanding\n                    my bag of tools. If you have some interesting problems\n                    that need solving, I’d love to help.\n                </p>\n            </div>\n        </div >\n    )\n} ","import * as React from 'react';\n\n\nexport default function Contact() {\n    return (\n        <div className=\"contact-container\">\n            <div className=\"item open-bracket\">{'{'}</div>\n            <img className=\"item contact-img\" src=\"https://avatars2.githubusercontent.com/u/55558517?v=4\" alt=\"Avatar\" />\n            <div className=\"item links-container\">\n                <a href=\"https://www.linkedin.com/in/barry-ervin/\" target=\"_blank\" rel=\"noopener noreferrer\"> <img className=\"icon-img linkedin\" src={require('../images/icons/001-linkedin.png')} alt=\"LinkedIn\" /></a>\n                <a href=\"https://github.com/barryae\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon-img github\" src={require('../images/icons/002-cat.png')} alt=\"GitHub\" /></a>\n                <a href=\"https://drive.google.com/file/d/1boZ4rK-wdjCbc8XpBa9db7rBgxYDg6id/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon-img resume\" src={require('../images/icons/003-cv.png')} alt=\"Resume\" /></a>\n            </div>\n            <div className=\"item close-bracket\">{'}'}</div>\n        </div >\n    )\n}\n\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Projects from \"../components/Projects\"\nimport Bio from \"../components/Bio\"\nimport Contact from \"../components/Contact\"\n\nexport default function Main() {\n\n    const [data, setData] = useState([])\n    const gitHubParams: string = \"visibility=public&sort=created\"\n    useEffect(() => {\n        const fetchRepos = async () => {\n            const list = await fetch(\"https://api.github.com/users/barryae/repos?\" + gitHubParams);\n            const repos = await list.json();\n            setData(repos)\n        }\n        fetchRepos()\n    }, []);\n\n    return (\n        <div className=\"main\">\n            <Bio />\n            <Contact />\n            <Projects projects={data} />\n        </div>\n    )\n}","import React from 'react';\nimport Main from './pages/Main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <svg className=\"left-lines\" preserveAspectRatio=\"none\" height=\"150vh\" width=\"15vw\" viewBox=\"0 0 200 720\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <path className=\"path\" fill=\"white\" stroke=\"black\" strokeWidth=\"5\" d=\"M 55 18 C 55 18 52 520 52 520 S 106 675 106 675 S 28 601 28 601 S 104 574 104 574 S 104 157 104 157 S 20 89 20 89 S 104 89 104 89 S 53 14 53 14\" />\n      </svg>\n      <svg className=\"right-lines\" preserveAspectRatio=\"none\" height=\"150vh\" width=\"15vw\" viewBox=\"0 0 200 720\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <path className=\"path\" fill=\"white\" stroke=\"black\" strokeWidth=\"5\" d=\"M 55 18 C 55 18 52 520 52 520 S 106 675 106 675 S 28 601 28 601 S 104 574 104 574 S 104 157 104 157 S 20 89 20 89 S 104 89 104 89 S 53 14 53 14\" />\n      </svg>\n      <Main />\n    </div >\n  )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}